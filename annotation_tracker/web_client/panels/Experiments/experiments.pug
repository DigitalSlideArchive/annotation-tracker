.s-panel-title-container
  span.s-panel-title.h-panel-title
    | Experiments
  span.s-panel-controls
    if collapsed
      i.icon-down-open
    else
      i.icon-up-open
    if removeButton
      i.icon-cancel.s-remove-panel(data-target=`#${id}`)

- var attrs = {}
if !collapsed
  - attrs.class = 'in'
.s-panel-content.collapse&attributes(attrs)
  .status
    | Experiment: #{experiment}
  - var sessionButtonClass = {"start-session": !sessionStarted, "stop-session": sessionStarted, "experiment-notify": notify =="experiment-session-button"}
  - var sessionButtonText = !sessionStarted ? "Start Session" : "End Session"
  div
    .btn-group.h-experiment-session-button(role='group')
      button.btn.btn-default.experiment-session-button(type='button', class=sessionButtonClass, title='Start Session')
        span
        | #{sessionButtonText}
  .btn-group.h-experiment-control-buttons(role='group')
    button.btn.btn-default.h-toggle-task(type='button', disabled=(!sessionStarted || !currentTask), title='Toggle Task')
      if running
        span.icon-pause
      else
        span.icon-play
    button.btn.btn-default.h-next-task(type='button', disabled=(!sessionStarted || !currentTask || !running), title='Next Task')
      span.icon-fast-fw
  - var displayStatus = running ? '(Running)' : '(Paused)';
  - var displayTask = currentTask ? `${currentTask.name} ${displayStatus}` : 'No Selected Task';
  - var taskHeaderClass = {"task-active": running && !sectionExpanded['task'], "task-inactive": currentTask && !running && !sectionExpanded['task']}
  .experiment-task-list.experiment-section-list
    .experiment-section-list-header(data-target="task", class=taskHeaderClass)
      span.icon-tasks
      span
        | Task: #{displayTask}
      .experiment-section-list-controls
        if sectionExpanded['task']
          i.icon-up-open
        else
          i.icon-down-open
    if sectionExpanded['task']
      .experiment-section-content
        each task, index in tasks.length ? tasks : ['There are no tasks']
          .h-task-item(data-task-index=index, class={ "task-active": index === taskIndex && running, "task-inactive": index === taskIndex && !running})
            label
              input.h-task-radio(title=task.description, disabled=!sessionStarted, value=index, type='radio', checked=index === taskIndex)
              span.h-task-radio-text(disabled=!sessionStarted)
                | #{task.name}
  if currentTask
    .experiment-task-description.experiment-section-list
      .experiment-section-list-header(data-target="description")
        span.icon-align-justify
        span
          | Task Description
        .experiment-section-list-controls
          if sectionExpanded['description']
            i.icon-up-open
          else
            i.icon-down-open
      if sectionExpanded['description']
        .experiment-section-content
          .task-description-card
            .task-description-card-title
              | #{currentTask.name}
            .task-description-card-body
              | #{currentTask.description}

    if running && currentTask.userInput
      .experiment-user-input.experiment-section-list
        .experiment-section-list-header(data-target="input")
          span.icon-pencil
          span
            | User Input
          .experiment-section-list-controls
            if sectionExpanded['input']
              i.icon-up-open
            else
              i.icon-down-open
        if sectionExpanded['input']
          .experiment-section-content
            each item, index in currentTask.userInput
              .container-fluid
                .row
                  label
                    span
                      | #{item.label}:
                    if item.type === 'range'
                      input(type=item.type, title=item.help, min=item.min, max=item.max, step=item.step)
                    else
                      input(type=item.type, title=item.help)
